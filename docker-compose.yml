version: '3.8'

services:
  rfid-tool-web:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm/v6
        - linux/arm64
        - linux/amd64
    image: rfid-tool:latest
    container_name: rfid-tool-web
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./config.json:/config.json:ro
      - rfid-data:/data
      - /dev:/dev
    devices:
      - /dev/spidev0.0:/dev/spidev0.0
      - /dev/gpiomem:/dev/gpiomem
    privileged: true
    environment:
      - MODE=web
      - PORT=8080
      - CONFIG_FILE=/config.json
    command: ["-web", "-port=8080", "-config=/config.json"]
    networks:
      - rfid-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.rfid-tool.rule=Host(`rfid.local`)"
      - "traefik.http.services.rfid-tool.loadbalancer.server.port=8080"

  rfid-tool-hw:
    build:
      context: .
      dockerfile: Dockerfile
      platforms:
        - linux/arm/v6
        - linux/arm64
        - linux/amd64
    image: rfid-tool:latest
    container_name: rfid-tool-hw
    restart: unless-stopped
    profiles:
      - hardware
    volumes:
      - ./config.json:/config.json:ro
      - rfid-data:/data
      - /dev:/dev
      - /sys:/sys
    devices:
      - /dev/spidev0.0:/dev/spidev0.0
      - /dev/gpiomem:/dev/gpiomem
    privileged: true
    environment:
      - MODE=hardware
      - CONFIG_FILE=/config.json
    command: ["-hardware", "-config=/config.json"]
    networks:
      - rfid-network

  # Development services
  rfid-tool-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
      args:
        - USER_ID=${USER_ID:-1000}
        - GROUP_ID=${GROUP_ID:-1000}
    image: rfid-tool:dev
    container_name: rfid-tool-dev
    profiles:
      - development
    ports:
      - "8080:8080"
      - "2345:2345"  # Delve debugger port
    volumes:
      - .:/workspace:cached
      - rfid-dev-cache:/go/pkg/mod
      - /dev:/dev
    devices:
      - /dev/spidev0.0:/dev/spidev0.0
      - /dev/gpiomem:/dev/gpiomem
    privileged: true
    working_dir: /workspace
    environment:
      - CGO_ENABLED=0
      - GOOS=linux
      - GOARCH=${GOARCH:-amd64}
      - CONFIG_FILE=/workspace/config.json
    networks:
      - rfid-network
    stdin_open: true
    tty: true

  # Monitoring and observability
  prometheus:
    image: prom/prometheus:latest
    container_name: rfid-prometheus
    profiles:
      - monitoring
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
    networks:
      - rfid-network

  grafana:
    image: grafana/grafana:latest
    container_name: rfid-grafana
    profiles:
      - monitoring
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - rfid-network

  # Reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: rfid-nginx
    profiles:
      - production
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-logs:/var/log/nginx
    depends_on:
      - rfid-tool-web
    networks:
      - rfid-network

  # Testing service
  rfid-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    image: rfid-tool:test
    container_name: rfid-tool-test
    profiles:
      - testing
    volumes:
      - .:/workspace:ro
      - test-cache:/go/pkg/mod
    working_dir: /workspace
    environment:
      - CGO_ENABLED=0
      - GOOS=linux
    networks:
      - rfid-network
    command: ["go", "test", "-v", "-race", "-coverprofile=coverage.out", "./..."]

networks:
  rfid-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  rfid-data:
    driver: local
  rfid-dev-cache:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local
  nginx-logs:
    driver: local
  test-cache:
    driver: local

# Development helpers
x-logging: &default-logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

# Override for all services
services:
  rfid-tool-web:
    logging: *default-logging
  rfid-tool-hw:
    logging: *default-logging
  rfid-tool-dev:
    logging: *default-logging
