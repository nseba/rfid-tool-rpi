# Development Dockerfile for RFID Tool
# Includes development tools, debugger, and hot reload capabilities

FROM golang:1.21-alpine AS base

# Install system dependencies and development tools
RUN apk add --no-cache \
    git \
    ca-certificates \
    tzdata \
    make \
    bash \
    curl \
    wget \
    vim \
    htop \
    strace \
    tcpdump \
    build-base \
    linux-headers

# Install development Go tools
RUN go install github.com/cosmtrek/air@latest && \
    go install github.com/go-delve/delve/cmd/dlv@latest && \
    go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest && \
    go install golang.org/x/tools/cmd/goimports@latest && \
    go install github.com/swaggo/swag/cmd/swag@latest

# Create development user with proper permissions
ARG USER_ID=1000
ARG GROUP_ID=1000
RUN addgroup -g $GROUP_ID developer && \
    adduser -D -s /bin/bash -u $USER_ID -G developer developer

# Set working directory
WORKDIR /workspace

# Copy go mod files for dependency caching
COPY go.mod go.sum ./
RUN go mod download

# Create necessary directories and set permissions
RUN mkdir -p /workspace/build /workspace/dist /go/pkg/mod && \
    chown -R developer:developer /workspace /go

# Switch to development user
USER developer

# Copy air configuration for hot reload
COPY --chown=developer:developer .air.toml /workspace/.air.toml

# Environment variables for development
ENV CGO_ENABLED=0
ENV GOOS=linux
ENV GOARCH=amd64
ENV GO111MODULE=on
ENV GOPROXY=https://proxy.golang.org,direct
ENV GOSUMDB=sum.golang.org

# Expose ports
EXPOSE 8080 2345

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/ || exit 1

# Default command for development
CMD ["air", "-c", ".air.toml"]
